# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets, Qt
from PyQt5.QtGui import QIcon, QCursor
from PyQt5.QtCore import Qt, QTimer
from PyQt5.QtWidgets import QMainWindow, QApplication


import time
import sys
import os

import sys
sys.path.append("")

from macro.modules.controller.control import controller
from macro.modules.UI.debugWindow import debugWindow
from macro.modules.UI.watchWindow import watchWindow
from macro.modules.editor.editor import Editor

from macro.logs import logger
from macro.config import config



class Ui_MainWindow(QMainWindow):
    def __init__(self):
        self.subscriberArrary = []

        super().__init__()
        self.initFilePath()
        
        self.setupUi(self)
        self.whiteBackGround()
        self.initWatchWindow()

        self.windowPosition()

        # 其他一些把柄的初始化
        self.controllerHandler = controller(self.WatchWindowHandler, 
        self.debugWindowHandler, self.editorHandler)
        self.state = config.WATCHING
        self.sortState = config.NAMESORT_ZHENG
        self.m_flag = True

        # 添加订阅者
        self.addsubscribers()
        self.controllerHandler.addWindowSubscriber_Hook(self.WatchWindowHandler)
        self.controllerHandler.addWindowSubscriber_Hook(self.debugWindowHandler)

        # 写东西进入文件里面
        self.update_srcshow2()
        self.Timer = QTimer()
        self.Timer.start(3000)
        self.Timer.timeout.connect(self.initEditor)

        for item in self.subscriberArrary:
            item.setEnabled(False)
        self.pushButton_editRecordingVideo.setEnabled(False)

    # 订阅者函数
    def addsubscribers(self):
        for item in self.subscriberArrary:
            self.controllerHandler.addPushButtonSubscriber_Hook(item)

    # 展示小窗口
    def initWatchWindow(self):
        self.WatchWindowHandler = watchWindow()
        self.WatchWindowHandler.setWindowFlags(
            Qt.WindowStaysOnTopHint | Qt.FramelessWindowHint | Qt.Tool)
        self.WatchWindowHandler.show()

    # 文件路径初始化
    def initFilePath(self):
        config.TMP_DIR = os.getcwd()
        config.TMP_DIR = eval(
            repr(config.TMP_DIR).replace('\\\\', '/'))
        self.Ui_DIR = os.path.abspath(os.path.dirname(__file__))
        self.Ui_DIR = eval(
            repr(self.Ui_DIR).replace('\\\\', '/'))

    # 设置窗口参数
    def windowPosition(self):
        self.setWindowIcon(
            QIcon(self.Ui_DIR + "/icon/logoIcon3.png"))   # 设置窗口图标
        self.setWindowFlags(Qt.FramelessWindowHint)
        self.setWindowTitle("Macro")
        desktop = QApplication.desktop()
        self.move((desktop.width() - 1200) / 2, 60)

    # 把东西写进脚本里
    def initEditor(self):
        try:
            last_file_path = config.TMP_DIR + "/cache/last_file.txt"
            last_file_content_path = config.TMP_DIR + "/cache/last_file_content.txt"
            
            # 路径
            with open(last_file_path, 'r', encoding="utf-8") as f:
                my_txt = f.read()
                f.close()

            if(my_txt == ""):
                self.init_TMP_FILE_PATH()
                with open(config.TMP_FILE_PATH, 'w', encoding='UTF-8') as f:
                    f.write("")
                    f.close()   
            else:
                config.TMP_FILE_PATH = last_file_content_path
                self.controllerHandler.open(filepath=last_file_content_path, call=False)
                config.TMP_FILE_PATH = my_txt
                
        except FileNotFoundError:
            self.init_TMP_FILE_PATH()
            with open(config.TMP_FILE_PATH, 'w', encoding='UTF-8') as f:
                f.write("")
                f.close()        
        
        for item in self.subscriberArrary:
            item.setEnabled(True)
        self.pushButton_editRecordingVideo.setEnabled(True)

        self.reload_editor()
        self.Timer.stop()

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("Macro")
        self.setWindowOpacity(0.98)  # 设置窗口透明度
        # self.setAttribute(QtCore.Qt.WA_TranslucentBackground)
        self.setFixedSize(1200,900)
        MainWindow.setWindowModality(QtCore.Qt.NonModal)
        # MainWindow.resize(1066, 737)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(self.Ui_DIR + "/icon/logoIcon3.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setAutoFillBackground(False)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.verticalLayout_head_tabWidget = QtWidgets.QVBoxLayout()
        self.verticalLayout_head_tabWidget.setSpacing(0)
        self.verticalLayout_head_tabWidget.setObjectName("verticalLayout_head_tabWidget")
        self.horizontalLayout_head = QtWidgets.QHBoxLayout()
        self.horizontalLayout_head.setSpacing(0)
        self.horizontalLayout_head.setObjectName("horizontalLayout_head")
        self.label_headLogo = QtWidgets.QLabel(self.centralwidget)
        self.label_headLogo.setMaximumSize(QtCore.QSize(60, 60))
        self.label_headLogo.setText("")
        self.label_headLogo.setPixmap(QtGui.QPixmap(self.Ui_DIR + "/icon/logoIcon3.png"))
        self.label_headLogo.setScaledContents(True)
        self.label_headLogo.setObjectName("label_headLogo")
        self.horizontalLayout_head.addWidget(self.label_headLogo)
        self.groupBox_head = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_head.setTitle("")
        self.groupBox_head.setObjectName("groupBox_head")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.groupBox_head)
        self.horizontalLayout_2.setSpacing(7)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        spacerItem = QtWidgets.QSpacerItem(
            40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem)
    
        self.pushButton_help = QtWidgets.QPushButton(self.groupBox_head)
        self.pushButton_help.setMinimumSize(QtCore.QSize(30, 30))
        self.pushButton_help.setMaximumSize(QtCore.QSize(30, 30))
        self.pushButton_help.setText("")
        icon0 = QtGui.QIcon()
        icon0.addPixmap(QtGui.QPixmap(self.Ui_DIR + "/icon/help.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_help.setIcon(icon0)
        self.pushButton_help.setIconSize(QtCore.QSize(30, 30))
        self.pushButton_help.setObjectName("pushButton_help")
        self.pushButton_help.clicked.connect(self.help)
        self.horizontalLayout_2.addWidget(self.pushButton_help)

        self.pushButton_headMinimize = QtWidgets.QPushButton(self.groupBox_head)
        self.pushButton_headMinimize.setMinimumSize(QtCore.QSize(30, 30))
        self.pushButton_headMinimize.setMaximumSize(QtCore.QSize(30, 30))
        self.pushButton_headMinimize.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(self.Ui_DIR + "/icon/minimize3.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_headMinimize.setIcon(icon1)
        self.pushButton_headMinimize.setIconSize(QtCore.QSize(30, 30))
        self.pushButton_headMinimize.setObjectName("pushButton_headMinimize")
        self.pushButton_headMinimize.clicked.connect(self.Minimize)
        self.horizontalLayout_2.addWidget(self.pushButton_headMinimize)

        self.pushButton_headClose = QtWidgets.QPushButton(self.groupBox_head)
        self.pushButton_headClose.setMinimumSize(QtCore.QSize(30, 30))
        self.pushButton_headClose.setMaximumSize(QtCore.QSize(30, 30))
        self.pushButton_headClose.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(self.Ui_DIR + "/icon/close6.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_headClose.setIcon(icon2)
        self.pushButton_headClose.setIconSize(QtCore.QSize(30, 30))
        self.pushButton_headClose.setAutoExclusive(False)
        self.pushButton_headClose.setObjectName("pushButton_headClose")
        self.pushButton_headClose.clicked.connect(self.closeWindow)
        self.horizontalLayout_2.addWidget(self.pushButton_headClose)

        self.horizontalLayout_head.addWidget(self.groupBox_head)
        self.verticalLayout_head_tabWidget.addLayout(self.horizontalLayout_head)
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        self.tabWidget.setAutoFillBackground(False)
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.West)
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tabWidget.setElideMode(QtCore.Qt.ElideMiddle)
        self.tabWidget.setUsesScrollButtons(True)
        self.tabWidget.setDocumentMode(False)
        self.tabWidget.setTabsClosable(False)
        self.tabWidget.setMovable(False)
        self.tabWidget.setTabBarAutoHide(False)
        self.tabWidget.setObjectName("tabWidget")
        self.tabWidgetPage1_document = QtWidgets.QWidget()
        self.tabWidgetPage1_document.setObjectName("tabWidgetPage1_document")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(
            self.tabWidgetPage1_document)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.verticalLayout_document = QtWidgets.QVBoxLayout()
        self.verticalLayout_document.setSpacing(0)
        self.verticalLayout_document.setObjectName("verticalLayout_document")
        self.horizontalLayout_search = QtWidgets.QHBoxLayout()
        self.horizontalLayout_search.setContentsMargins(5, 5, 10, 5)
        self.horizontalLayout_search.setObjectName("horizontalLayout_search")
        self.pushButton_search = QtWidgets.QPushButton(
            self.tabWidgetPage1_document)
        self.pushButton_search.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(self.Ui_DIR + "/icon/search.png"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_search.setIcon(icon3)
        self.pushButton_search.setIconSize(QtCore.QSize(30, 30))
        self.pushButton_search.setObjectName("pushButton_search")
        self.pushButton_search.clicked.connect(self.search)
        self.pushButton_search.setShortcut("enter")
        self.horizontalLayout_search.addWidget(self.pushButton_search)
        self.lineEdit_searchLine = QtWidgets.QLineEdit(
            self.tabWidgetPage1_document)
        self.lineEdit_searchLine.setObjectName("lineEdit_searchLine")
        self.horizontalLayout_search.addWidget(self.lineEdit_searchLine)
        self.horizontalLayout_search.setStretch(1, 6)
        self.verticalLayout_document.addLayout(self.horizontalLayout_search)
        spacerItem1 = QtWidgets.QSpacerItem(
            20, 10, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.verticalLayout_document.addItem(spacerItem1)
        self.groupBox_docTitle = QtWidgets.QGroupBox(
            self.tabWidgetPage1_document)
        self.groupBox_docTitle.setTitle("")
        self.groupBox_docTitle.setObjectName("groupBox_docTitle")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.groupBox_docTitle)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.pushButton_docName = QtWidgets.QPushButton(self.groupBox_docTitle)
        self.pushButton_docName.setToolTip("")
        self.pushButton_docName.setObjectName("pushButton_docName")
        self.pushButton_docName.setText("名称")
        self.pushButton_docName.clicked.connect(self.name_sort)
        self.horizontalLayout.addWidget(self.pushButton_docName)
        self.line_docLeft = QtWidgets.QFrame(self.groupBox_docTitle)
        self.line_docLeft.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_docLeft.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_docLeft.setObjectName("line_docLeft")
        self.horizontalLayout.addWidget(self.line_docLeft)
        self.pushButton_docModificationTime = QtWidgets.QPushButton(
            self.groupBox_docTitle)
        self.pushButton_docModificationTime.setObjectName(
            "pushButton_docModificationTime")
        self.pushButton_docModificationTime.setText("修改日期")
        self.pushButton_docModificationTime.clicked.connect(self.time_sort)
        self.horizontalLayout.addWidget(self.pushButton_docModificationTime)
        self.line_docRight = QtWidgets.QFrame(self.groupBox_docTitle)
        self.line_docRight.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_docRight.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_docRight.setObjectName("line_docRight")
        self.horizontalLayout.addWidget(self.line_docRight)
        spacerItem2 = QtWidgets.QSpacerItem(
            40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem2)
        self.horizontalLayout.setStretch(0, 2)
        self.horizontalLayout.setStretch(2, 2)
        self.horizontalLayout.setStretch(4, 6)
        self.verticalLayout_document.addWidget(self.groupBox_docTitle)
        
        self.verticalLayout_10.addLayout(self.verticalLayout_document)
        self.tabWidget.addTab(self.tabWidgetPage1_document, "")
    


        self.tabWidgetPage2_edit = QtWidgets.QWidget()
        self.tabWidgetPage2_edit.setObjectName("tabWidgetPage2_edit")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.tabWidgetPage2_edit)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.groupBox_editToolBox = QtWidgets.QGroupBox(
            self.tabWidgetPage2_edit)
        self.groupBox_editToolBox.setTitle("")
        self.groupBox_editToolBox.setObjectName("groupBox_editToolBox")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(
            self.groupBox_editToolBox)
        self.horizontalLayout_3.setContentsMargins(5, 5, 5, 5)
        self.horizontalLayout_3.setSpacing(5)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.pushButton_editnew = QtWidgets.QPushButton(
            self.groupBox_editToolBox)
        self.pushButton_editnew.setText("")
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(self.Ui_DIR + "/icon/new2.png"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_editnew.setIcon(icon7)
        self.pushButton_editnew.setObjectName("pushButton_editnew")
        self.pushButton_editnew.setToolTip("新建")
        self.pushButton_editnew.clicked.connect(self.newpage)
        self.pushButton_editnew.setShortcut("ctrl+N")
        self.horizontalLayout_3.addWidget(self.pushButton_editnew)
        self.subscriberArrary.append(self.pushButton_editnew)
        
        self.pushButton_editSave = QtWidgets.QPushButton(
            self.groupBox_editToolBox)
        self.pushButton_editSave.setText("")
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(self.Ui_DIR + "/icon/save.png"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_editSave.setIcon(icon8)
        self.pushButton_editSave.setObjectName("pushButton_editSave")
        self.pushButton_editSave.setToolTip("保存")
        self.pushButton_editSave.setShortcut("ctrl+S")
        self.pushButton_editSave.clicked.connect(
            lambda: self.save(config.SAVE_AND_TELL_ME))
        self.horizontalLayout_3.addWidget(self.pushButton_editSave)
        self.subscriberArrary.append(self.pushButton_editSave)

        self.pushButton_editSaveCopy = QtWidgets.QPushButton(
            self.groupBox_editToolBox)
        self.pushButton_editSaveCopy.setText("")
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(self.Ui_DIR + "/icon/saveCopy2.png"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_editSaveCopy.setIcon(icon9)
        self.pushButton_editSaveCopy.setObjectName("pushButton_editSaveCopy")
        self.pushButton_editSaveCopy.setToolTip("另存为")
        self.pushButton_editSaveCopy.setShortcut("ctrl+shift+S")
        self.pushButton_editSaveCopy.clicked.connect(self.saveAs)
        self.horizontalLayout_3.addWidget(self.pushButton_editSaveCopy)
        self.subscriberArrary.append(self.pushButton_editSaveCopy)

        self.line_editToolBox1 = QtWidgets.QFrame(self.groupBox_editToolBox)
        self.line_editToolBox1.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_editToolBox1.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_editToolBox1.setObjectName("line_editToolBox1")
        self.horizontalLayout_3.addWidget(self.line_editToolBox1)

        self.pushButton_editRunning = QtWidgets.QPushButton(
            self.groupBox_editToolBox)
        self.pushButton_editRunning.setText("")
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(self.Ui_DIR + "/icon/running2.png"),
                         QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_editRunning.setIcon(icon10)
        self.pushButton_editRunning.setObjectName("pushButton_editRunning")
        self.pushButton_editRunning.setToolTip("执行")
        self.pushButton_editRunning.setShortcut("F5")
        self.pushButton_editRunning.clicked.connect(self.exe)
        self.horizontalLayout_3.addWidget(self.pushButton_editRunning)
        self.subscriberArrary.append(self.pushButton_editRunning)


        self.pushButton_editDebug = QtWidgets.QPushButton(
            self.groupBox_editToolBox)
        self.pushButton_editDebug.setText("")
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(self.Ui_DIR + "/icon/debug.png"),
                         QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_editDebug.setIcon(icon11)
        self.pushButton_editDebug.setObjectName("pushButton_editDebug")
        self.pushButton_editDebug.setToolTip("检查")
        self.pushButton_editDebug.setShortcut("F4")
        self.pushButton_editDebug.clicked.connect(self.check)
        self.horizontalLayout_3.addWidget(self.pushButton_editDebug)
        self.subscriberArrary.append(self.pushButton_editDebug)

        self.pushButton_editAutoCorrection = QtWidgets.QPushButton(
            self.groupBox_editToolBox)
        self.pushButton_editAutoCorrection.setText("")
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(self.Ui_DIR + "/icon/autoCorrection.png"),
                         QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_editAutoCorrection.setIcon(icon12)
        self.pushButton_editAutoCorrection.setObjectName(
            "pushButton_editAutoCorrection")
        self.pushButton_editAutoCorrection.setShortcut("shift+alt+F")
        self.pushButton_editAutoCorrection.setToolTip("格式化")
        self.pushButton_editAutoCorrection.clicked.connect(self.modify)
        self.horizontalLayout_3.addWidget(self.pushButton_editAutoCorrection)
        self.subscriberArrary.append(self.pushButton_editAutoCorrection)


        self.line_editToolBox2 = QtWidgets.QFrame(self.groupBox_editToolBox)
        self.line_editToolBox2.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_editToolBox2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_editToolBox2.setObjectName("line_editToolBox2")
        self.horizontalLayout_3.addWidget(self.line_editToolBox2)
        
        self.pushButton_editRecordingVideo = QtWidgets.QPushButton(
            self.groupBox_editToolBox)
        self.pushButton_editRecordingVideo.setText("")
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(self.Ui_DIR + "/icon/recording4.png"),
                         QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_editRecordingVideo.setIcon(icon13)
        self.pushButton_editRecordingVideo.setFlat(False)
        self.pushButton_editRecordingVideo.setObjectName(
            "pushButton_editRecordingVideo")
        self.pushButton_editRecordingVideo.setToolTip("录屏")
        self.pushButton_editRecordingVideo.clicked.connect(self.monitor)
        self.horizontalLayout_3.addWidget(self.pushButton_editRecordingVideo)


        self.pushButton_editRecordingSound = QtWidgets.QPushButton(
            self.groupBox_editToolBox)
        self.pushButton_editRecordingSound.setText("")
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(self.Ui_DIR + "/icon/recording3.png"),
                         QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_editRecordingSound.setIcon(icon14)
        self.pushButton_editRecordingSound.setObjectName(
            "pushButton_editRecordingSound")
        self.pushButton_editRecordingSound.setToolTip("录音")
        self.pushButton_editRecordingSound.clicked.connect(self.voice)
        self.horizontalLayout_3.addWidget(self.pushButton_editRecordingSound)
        self.subscriberArrary.append(self.pushButton_editRecordingSound)


        self.line_editToolBox3 = QtWidgets.QFrame(self.groupBox_editToolBox)
        self.line_editToolBox3.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_editToolBox3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_editToolBox3.setObjectName("line_editToolBox3")
        self.horizontalLayout_3.addWidget(self.line_editToolBox3)
        self.pushButton_editMap = QtWidgets.QPushButton(
            self.groupBox_editToolBox)
        self.pushButton_editMap.setText("")
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(self.Ui_DIR + "/icon/map.png"),
                         QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_editMap.setIcon(icon15)
        self.pushButton_editMap.setObjectName("pushButton_editMap")
        self.pushButton_editMap.setToolTip("地图")
        self.pushButton_editMap.clicked.connect(self.showRuler)
        self.horizontalLayout_3.addWidget(self.pushButton_editMap)
        self.subscriberArrary.append(self.pushButton_editMap)


        self.pushButton_editPicture = QtWidgets.QPushButton(
            self.groupBox_editToolBox)
        self.pushButton_editPicture.setText("")
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(self.Ui_DIR + "/icon/picture2.png"),
                         QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_editPicture.setIcon(icon16)
        self.pushButton_editPicture.setObjectName("pushButton_editPicture")
        self.pushButton_editPicture.setToolTip("图片夹")
        self.pushButton_editPicture.clicked.connect(self.image)
        self.horizontalLayout_3.addWidget(self.pushButton_editPicture)
        self.subscriberArrary.append(self.pushButton_editPicture)


        self.line_editToolBox4 = QtWidgets.QFrame(self.groupBox_editToolBox)
        self.line_editToolBox4.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_editToolBox4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_editToolBox4.setObjectName("line_editToolBox4")
        self.horizontalLayout_3.addWidget(self.line_editToolBox4)
        self.pushButton_editTemplate = QtWidgets.QPushButton(
            self.groupBox_editToolBox)
        self.pushButton_editTemplate.setText("")
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(self.Ui_DIR + "/icon/template.png"),
                         QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_editTemplate.setIcon(icon17)
        self.pushButton_editTemplate.setObjectName("pushButton_editTemplate")
        self.pushButton_editTemplate.setToolTip("导入模板")
        self.pushButton_editTemplate.clicked.connect(self.hello)
        self.horizontalLayout_3.addWidget(self.pushButton_editTemplate)
        self.subscriberArrary.append(self.pushButton_editTemplate)


        self.pushButton_editOpen = QtWidgets.QPushButton(
            self.groupBox_editToolBox)
        self.pushButton_editOpen.setText("")
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(self.Ui_DIR + "/icon/open.png"),
                         QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_editOpen.setIcon(icon18)
        self.pushButton_editOpen.setObjectName("pushButton_editOpen")
        self.pushButton_editOpen.setShortcut("ctrl+O")
        self.pushButton_editOpen.setToolTip("打开")
        self.pushButton_editOpen.clicked.connect(self.open)
        self.horizontalLayout_3.addWidget(self.pushButton_editOpen)
        self.subscriberArrary.append(self.pushButton_editOpen)


        self.verticalLayout_4.addWidget(self.groupBox_editToolBox)
        self.horizontalLayout_webBrowserAndEditInformation = QtWidgets.QHBoxLayout()
        self.horizontalLayout_webBrowserAndEditInformation.setObjectName(
            "horizontalLayout_webBrowserAndEditInformation")
        self.gridLayout_webBrowser = QtWidgets.QGridLayout()
        self.gridLayout_webBrowser.setObjectName("gridLayout_webBrowser")
        self.editorHandler = Editor(self)
        self.gridLayout_webBrowser.addWidget(self.editorHandler, 0, 0, 1, 1)


        self.horizontalLayout_webBrowserAndEditInformation.addLayout(
            self.gridLayout_webBrowser)
        self.groupBox_editInformation = QtWidgets.QGroupBox(
            self.tabWidgetPage2_edit)
        self.groupBox_editInformation.setTitle("")
        self.groupBox_editInformation.setObjectName("groupBox_editInformation")
        self.verticalLayout = QtWidgets.QVBoxLayout(
            self.groupBox_editInformation)
        self.verticalLayout.setObjectName("verticalLayout")
        self.debugWindowHandler = debugWindow(self.groupBox_editInformation)
        self.verticalLayout.addWidget(self.debugWindowHandler)
        self.pushButton_editInformationFlash = QtWidgets.QPushButton(
            self.groupBox_editInformation)
        self.pushButton_editInformationFlash.setText("")
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(self.Ui_DIR + "/icon/flash.png"),
                         QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_editInformationFlash.setIcon(icon19)
        self.pushButton_editInformationFlash.setObjectName(
            "pushButton_editInformationFlash")
        self.pushButton_editInformationFlash.clicked.connect(
            self.clearDebugWindow)
        self.verticalLayout.addWidget(self.pushButton_editInformationFlash)
        self.horizontalLayout_webBrowserAndEditInformation.addWidget(
            self.groupBox_editInformation)
        self.horizontalLayout_webBrowserAndEditInformation.setStretch(0, 2)
        self.horizontalLayout_webBrowserAndEditInformation.setStretch(1, 1)
        self.verticalLayout_4.addLayout(
            self.horizontalLayout_webBrowserAndEditInformation)
        self.tabWidget.addTab(self.tabWidgetPage2_edit, "")







        self.tabWidgetPage3_setting = QtWidgets.QWidget()
        self.tabWidgetPage3_setting.setObjectName("tabWidgetPage3_setting")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(
            self.tabWidgetPage3_setting)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.groupBox_setMouse = QtWidgets.QGroupBox(
            self.tabWidgetPage3_setting)
        self.groupBox_setMouse.setTitle("")
        self.groupBox_setMouse.setObjectName("groupBox_setMouse")
        self.horizontalLayout_27 = QtWidgets.QHBoxLayout(
            self.groupBox_setMouse)
        self.horizontalLayout_27.setObjectName("horizontalLayout_27")
        self.label_setMouseIcon = QtWidgets.QLabel(self.groupBox_setMouse)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.label_setMouseIcon.sizePolicy().hasHeightForWidth())
        self.label_setMouseIcon.setSizePolicy(sizePolicy)
        self.label_setMouseIcon.setMinimumSize(QtCore.QSize(30, 30))
        self.label_setMouseIcon.setMaximumSize(QtCore.QSize(30, 30))
        self.label_setMouseIcon.setAutoFillBackground(False)
        self.label_setMouseIcon.setText("")
        self.label_setMouseIcon.setPixmap(QtGui.QPixmap(self.Ui_DIR + "/icon/mouse.png"))
        self.label_setMouseIcon.setScaledContents(True)
        self.label_setMouseIcon.setObjectName("label_setMouseIcon")
        self.horizontalLayout_27.addWidget(self.label_setMouseIcon)
        self.label_setMouseNotes = QtWidgets.QLabel(self.groupBox_setMouse)
        self.label_setMouseNotes.setObjectName("label_setMouseNotes")
        self.horizontalLayout_27.addWidget(self.label_setMouseNotes)
        self.spinBox_setMouseValue = QtWidgets.QSpinBox(self.groupBox_setMouse)
        self.spinBox_setMouseValue.setStyleSheet("")
        self.spinBox_setMouseValue.setMinimum(0)
        self.spinBox_setMouseValue.setMaximum(9999)
        self.spinBox_setMouseValue.setSingleStep(100)
        self.spinBox_setMouseValue.setProperty("value", config.MOUSE_ACCURACY)
        self.spinBox_setMouseValue.setObjectName("spinBox_setMouseValue")
        self.horizontalLayout_27.addWidget(self.spinBox_setMouseValue)
        self.label_setMouseUnit = QtWidgets.QLabel(self.groupBox_setMouse)
        self.label_setMouseUnit.setObjectName("label_setMouseUnit")
        self.horizontalLayout_27.addWidget(self.label_setMouseUnit)
        self.pushButton_setResetMouse = QtWidgets.QPushButton(
            self.groupBox_setMouse)
        self.pushButton_setResetMouse.setText("")
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(self.Ui_DIR + "/icon/flash.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        # self.pushButton_editInformationFlash.setIcon(icon19)
        self.pushButton_setResetMouse.setIcon(icon19)
        self.pushButton_setResetMouse.setIconSize(QtCore.QSize(40, 40))
        self.pushButton_setResetMouse.setAutoDefault(False)
        self.pushButton_setResetMouse.setObjectName("pushButton_setResetMouse")
        self.pushButton_setResetMouse.clicked.connect(self.init_mouse_acc)
        self.horizontalLayout_27.addWidget(self.pushButton_setResetMouse)
        spacerItem8 = QtWidgets.QSpacerItem(
            40, 20, QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_27.addItem(spacerItem8)
        self.horizontalLayout_27.setStretch(1, 3)
        self.horizontalLayout_27.setStretch(2, 4)
        self.horizontalLayout_27.setStretch(3, 2)
        self.horizontalLayout_27.setStretch(4, 1)
        self.verticalLayout_3.addWidget(self.groupBox_setMouse)

        self.groupBox_setRecording = QtWidgets.QGroupBox(
            self.tabWidgetPage3_setting)
        self.groupBox_setRecording.setTitle("")
        self.groupBox_setRecording.setObjectName("groupBox_setRecording")
        self.horizontalLayout_28 = QtWidgets.QHBoxLayout(
            self.groupBox_setRecording)
        self.horizontalLayout_28.setObjectName("horizontalLayout_28")
        self.label_setRecordingIcon = QtWidgets.QLabel(
            self.groupBox_setRecording)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.label_setRecordingIcon.sizePolicy().hasHeightForWidth())
        self.label_setRecordingIcon.setSizePolicy(sizePolicy)
        self.label_setRecordingIcon.setMinimumSize(QtCore.QSize(30, 30))
        self.label_setRecordingIcon.setMaximumSize(QtCore.QSize(30, 30))
        self.label_setRecordingIcon.setAutoFillBackground(False)
        self.label_setRecordingIcon.setText("")
        self.label_setRecordingIcon.setPixmap(
            QtGui.QPixmap(self.Ui_DIR + "/icon/recording4.png"))
        self.label_setRecordingIcon.setScaledContents(True)
        self.label_setRecordingIcon.setObjectName("label_setRecordingIcon")
        self.horizontalLayout_28.addWidget(self.label_setRecordingIcon)
        self.label_setRecordingNotes = QtWidgets.QLabel(
            self.groupBox_setRecording)
        self.label_setRecordingNotes.setObjectName("label_setRecordingNotes")
        self.horizontalLayout_28.addWidget(self.label_setRecordingNotes)
        self.spinBox_setRecordingValue = QtWidgets.QSpinBox(
            self.groupBox_setRecording)
        self.spinBox_setRecordingValue.setStyleSheet("")
        self.spinBox_setRecordingValue.setMinimum(0)
        self.spinBox_setRecordingValue.setMaximum(9999)
        self.spinBox_setRecordingValue.setSingleStep(100)
        self.spinBox_setRecordingValue.setProperty("value", config.DELAY_ACCURACY)
        self.spinBox_setRecordingValue.setObjectName(
            "spinBox_setRecordingValue")
        self.horizontalLayout_28.addWidget(self.spinBox_setRecordingValue)
        self.label_setRecordingUnit = QtWidgets.QLabel(
            self.groupBox_setRecording)
        self.label_setRecordingUnit.setObjectName("label_setRecordingUnit")
        self.horizontalLayout_28.addWidget(self.label_setRecordingUnit)
        self.pushButton_setResetRecording = QtWidgets.QPushButton(
            self.groupBox_setRecording)
        self.pushButton_setResetRecording.setText("")
        self.pushButton_setResetRecording.setIcon(icon19)
        self.pushButton_setResetRecording.setIconSize(QtCore.QSize(40, 40))
        self.pushButton_setResetRecording.setAutoDefault(False)
        self.pushButton_setResetRecording.setObjectName(
            "pushButton_setResetRecording")
        self.pushButton_setResetRecording.clicked.connect(self.init_delay_acc)
        self.horizontalLayout_28.addWidget(self.pushButton_setResetRecording)
        spacerItem9 = QtWidgets.QSpacerItem(
            40, 20, QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_28.addItem(spacerItem9)
        self.horizontalLayout_28.setStretch(1, 3)
        self.horizontalLayout_28.setStretch(2, 4)
        self.horizontalLayout_28.setStretch(3, 2)
        self.horizontalLayout_28.setStretch(4, 1)
        self.verticalLayout_3.addWidget(self.groupBox_setRecording)
        self.groupBox_setPicture = QtWidgets.QGroupBox(
            self.tabWidgetPage3_setting)
        self.groupBox_setPicture.setTitle("")
        self.groupBox_setPicture.setObjectName("groupBox_setPicture")
        self.horizontalLayout_29 = QtWidgets.QHBoxLayout(
            self.groupBox_setPicture)
        self.horizontalLayout_29.setObjectName("horizontalLayout_29")
        self.label_setPictureIcon = QtWidgets.QLabel(self.groupBox_setPicture)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.label_setPictureIcon.sizePolicy().hasHeightForWidth())
        self.label_setPictureIcon.setSizePolicy(sizePolicy)
        self.label_setPictureIcon.setMinimumSize(QtCore.QSize(30, 30))
        self.label_setPictureIcon.setMaximumSize(QtCore.QSize(30, 30))
        self.label_setPictureIcon.setAutoFillBackground(False)
        self.label_setPictureIcon.setText("")
        self.label_setPictureIcon.setPixmap(QtGui.QPixmap(self.Ui_DIR + "/icon/picture2.png"))
        self.label_setPictureIcon.setScaledContents(True)
        self.label_setPictureIcon.setObjectName("label_setPictureIcon")
        self.horizontalLayout_29.addWidget(self.label_setPictureIcon)
        self.label_setPictureNotes = QtWidgets.QLabel(self.groupBox_setPicture)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.label_setPictureNotes.sizePolicy().hasHeightForWidth())
        self.label_setPictureNotes.setSizePolicy(sizePolicy)
        self.label_setPictureNotes.setObjectName("label_setPictureNotes")
        self.horizontalLayout_29.addWidget(self.label_setPictureNotes)
        self.spinBox_setPictureValue = QtWidgets.QSpinBox(
            self.groupBox_setPicture)
        self.spinBox_setPictureValue.setStyleSheet("")
        self.spinBox_setPictureValue.setMinimum(0)
        self.spinBox_setPictureValue.setProperty("value", config.IMAGE_ACCURACY)
        self.spinBox_setPictureValue.setObjectName("spinBox_setPictureValue")
        self.horizontalLayout_29.addWidget(self.spinBox_setPictureValue)
        self.label_setPictureUnit = QtWidgets.QLabel(self.groupBox_setPicture)
        self.label_setPictureUnit.setObjectName("label_setPictureUnit")
        self.horizontalLayout_29.addWidget(self.label_setPictureUnit)
        self.pushButton_setResetPicture = QtWidgets.QPushButton(
            self.groupBox_setPicture)
        self.pushButton_setResetPicture.setText("")
        self.pushButton_setResetPicture.setIcon(icon19)
        self.pushButton_setResetPicture.setIconSize(QtCore.QSize(40, 40))
        self.pushButton_setResetPicture.setAutoDefault(False)
        self.pushButton_setResetPicture.setObjectName(
            "pushButton_setResetPicture")
        self.pushButton_setResetPicture.clicked.connect(self.init_image_acc)
        self.horizontalLayout_29.addWidget(self.pushButton_setResetPicture)
        spacerItem10 = QtWidgets.QSpacerItem(
            40, 20, QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_29.addItem(spacerItem10)
        self.horizontalLayout_29.setStretch(1, 3)
        self.horizontalLayout_29.setStretch(2, 4)
        self.horizontalLayout_29.setStretch(3, 2)
        self.horizontalLayout_29.setStretch(4, 1)
        self.verticalLayout_3.addWidget(self.groupBox_setPicture)
        self.groupBox_setStyle = QtWidgets.QGroupBox(
            self.tabWidgetPage3_setting)
        self.groupBox_setStyle.setTitle("")
        self.groupBox_setStyle.setObjectName("groupBox_setStyle")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.groupBox_setStyle)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.label_setStyleIcon = QtWidgets.QLabel(self.groupBox_setStyle)
        self.label_setStyleIcon.setMinimumSize(QtCore.QSize(30, 30))
        self.label_setStyleIcon.setMaximumSize(QtCore.QSize(30, 30))
        self.label_setStyleIcon.setText("")
        self.label_setStyleIcon.setPixmap(QtGui.QPixmap(self.Ui_DIR + "/icon/style.png"))
        self.label_setStyleIcon.setScaledContents(True)
        self.label_setStyleIcon.setObjectName("label_setStyleIcon")
        self.horizontalLayout_4.addWidget(self.label_setStyleIcon)
        self.label_setStyleNotes = QtWidgets.QLabel(self.groupBox_setStyle)
        self.label_setStyleNotes.setObjectName("label_setStyleNotes")
        self.horizontalLayout_4.addWidget(self.label_setStyleNotes)
        self.comboBox_setStyle = QtWidgets.QComboBox(self.groupBox_setStyle)
        self.comboBox_setStyle.setObjectName("comboBox_setStyle")
        self.comboBox_setStyle.addItem("")
        self.comboBox_setStyle.addItem("")
        self.comboBox_setStyle.currentIndexChanged.connect(self.comboBoxChange)
        self.horizontalLayout_4.addWidget(self.comboBox_setStyle)
        self.label_setStyleNull = QtWidgets.QLabel(self.groupBox_setStyle)
        self.label_setStyleNull.setText("")
        self.label_setStyleNull.setObjectName("label_setStyleNull")
        self.horizontalLayout_4.addWidget(self.label_setStyleNull)
        spacerItem11 = QtWidgets.QSpacerItem(
            40, 20, QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem11)
        spacerItem12 = QtWidgets.QSpacerItem(
            40, 20, QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem12)
        self.horizontalLayout_4.setStretch(1, 3)
        self.horizontalLayout_4.setStretch(2, 4)
        self.horizontalLayout_4.setStretch(3, 2)
        self.horizontalLayout_4.setStretch(4, 1)
        self.verticalLayout_3.addWidget(self.groupBox_setStyle)
        self.tabWidget.addTab(self.tabWidgetPage3_setting, "")


        
        self.verticalLayout_head_tabWidget.addWidget(self.tabWidget)
        self.verticalLayout_12.addLayout(self.verticalLayout_head_tabWidget)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1094, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.tabWidget.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.retranslateUi(self)

    def closeEvent(self, event):
        other_file_path = config.TMP_DIR + "/cache/last_file.txt"
        try:
            with open(other_file_path, 'w', encoding="utf-8") as f:
                f.write(config.TMP_FILE_PATH)
                f.close()
            last_file_path = config.TMP_DIR + "/cache/last_file_content.txt"
            config.TMP_FILE_PATH = last_file_path
            self.editorHandler.toPlainText(config.SAVE_DONT_TELL_ME)
        except FileNotFoundError:
            pass


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle("Macro")
        self.tabWidget.setTabText(self.tabWidget.indexOf(
            self.tabWidgetPage1_document), _translate("MainWindow", "文件"))

        self.tabWidget.setTabText(self.tabWidget.indexOf(
            self.tabWidgetPage2_edit), _translate("MainWindow", "编辑"))
        
        

        self.label_setMouseNotes.setText(
            _translate("MainWindow", "录屏鼠标记录精度(0-9999)"))
        self.label_setMouseUnit.setText(_translate("MainWindow", "ms"))
        self.label_setRecordingNotes.setText(
            _translate("MainWindow", "录屏延迟记录精度(0-9999)"))
        self.label_setRecordingUnit.setText(_translate("MainWindow", "ms"))
        self.label_setPictureNotes.setText(
            _translate("MainWindow", "图像识别精度(0-99)"))
        self.label_setPictureUnit.setText(_translate("MainWindow", "%"))
        self.label_setStyleNotes.setText("界面样式")
        self.comboBox_setStyle.setItemText(
            0, _translate("MainWindow", "伊丽莎白"))
        self.comboBox_setStyle.setItemText(
            1, _translate("MainWindow", "午夜先生"))

        self.tabWidget.setTabText(self.tabWidget.indexOf(
            self.tabWidgetPage3_setting), _translate("MainWindow", "设置  "))

    def name_sort(self):
        if(self.sortState == config.NAMESORT_ZHENG):
            self.sortState = config.NAMESORT_FAN
        else:
            self.sortState = config.NAMESORT_ZHENG

        files = self.get_file_name(config.TMP_DIR + "/scripts")
        if(self.sortState == config.NAMESORT_ZHENG):
            files.sort()
        else:
            files.sort(reverse=True)

        self.reload_editor(files, 1)        

    def time_sort(self):
        if(self.sortState == config.TIMESORT_ZHENG):
            self.sortState = config.TIMESORT_FAN
        else:
            self.sortState = config.TIMESORT_ZHENG

        files = self.get_file_name(config.TMP_DIR + "/scripts")
        tmpfiles = []
        for name in files:
            mtime = os.stat(config.TMP_DIR + "/scripts/" + name).st_mtime
            file_modify_time = time.strftime(
                '%Y-%m-%d %H:%M:%S', time.localtime(mtime))
            tmp = {}
            tmp['name'] = name
            tmp['modify_time'] = file_modify_time
            tmpfiles.append(tmp)
        
        if(self.sortState == config.TIMESORT_ZHENG):
            tmpfiles.sort(key=lambda x: x['modify_time'])
        else:
            tmpfiles.sort(key=lambda x: x['modify_time'], reverse=True)

        files.clear()
        for item in tmpfiles:
            files.append(item['name'])

        self.reload_editor(files, 1)
        

    def mousePressEvent(self, event):
        if event.button() == Qt.LeftButton:
            try:
                self.m_flag = True
                self.m_Position = event.globalPos()-self.pos()  # 获取鼠标相对窗口的位置
                event.accept()
                self.setCursor(QCursor(Qt.OpenHandCursor))  # 更改鼠标图标
            except AttributeError:
                pass
    
    def mouseMoveEvent(self, QMouseEvent):
        if Qt.LeftButton and self.m_flag:
            try:
                self.move(QMouseEvent.globalPos()-self.m_Position)  # 更改窗口位置
                QMouseEvent.accept()
            except AttributeError:
                pass

    def mouseReleaseEvent(self, QMouseEvent):
        self.m_flag = False
        self.setCursor(QCursor(Qt.ArrowCursor))

    def get_file_name(self, scripts):
        need_files = []
        for root, dirs, files in os.walk(scripts, topdown=False):
            for name in files:
                need_files.append(name)
        return need_files

    def update_srcshow2(self, files=[], have_file = 0):
        self.scrollArea_document = QtWidgets.QScrollArea(
            self.tabWidgetPage1_document)
        self.scrollArea_document.setWidgetResizable(True)
        self.scrollArea_document.setObjectName("scrollArea_document")
        self.scrollAreaWidgetContents_document = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_document.setGeometry(
            QtCore.QRect(0, 0, 954, 521))
        self.scrollAreaWidgetContents_document.setObjectName(
            "scrollAreaWidgetContents_document")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(
            self.scrollAreaWidgetContents_document)
        self.verticalLayout_2.setSpacing(7)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        
        if(have_file == 0):
            files = self.get_file_name(config.TMP_DIR + "/scripts")

        High = 80

        for name in files:
            self.groupBox_doc1 = QtWidgets.QGroupBox(
                self.scrollAreaWidgetContents_document)
            self.groupBox_doc1.setFixedHeight(High)
            self.groupBox_doc1.setMaximumSize(QtCore.QSize(16777215, 100))
            self.groupBox_doc1.setTitle("")
            self.groupBox_doc1.setObjectName("groupBox_doc1")
            self.horizontalLayout_16 = QtWidgets.QHBoxLayout(self.groupBox_doc1)
            self.horizontalLayout_16.setObjectName("horizontalLayout_16")
            self.horizontalLayout_doc1 = QtWidgets.QHBoxLayout()
            self.horizontalLayout_doc1.setObjectName("horizontalLayout_doc1")
            self.label_docIcon1 = QtWidgets.QLabel(self.groupBox_doc1)
            sizePolicy = QtWidgets.QSizePolicy(
                QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
            sizePolicy.setHorizontalStretch(0)
            sizePolicy.setVerticalStretch(0)
            sizePolicy.setHeightForWidth(
                self.label_docIcon1.sizePolicy().hasHeightForWidth())
            self.label_docIcon1.setSizePolicy(sizePolicy)
            self.label_docIcon1.setAutoFillBackground(False)
            self.label_docIcon1.setText("")
            self.label_docIcon1.setPixmap(QtGui.QPixmap(self.Ui_DIR + "/icon/document.png"))
            self.label_docIcon1.setScaledContents(True)
            self.label_docIcon1.setObjectName("label_docIcon1")
            self.horizontalLayout_doc1.addWidget(self.label_docIcon1)
            self.lineEdit_docName1 = QtWidgets.QLineEdit(self.groupBox_doc1)
            self.lineEdit_docName1.setAutoFillBackground(False)
            self.lineEdit_docName1.setReadOnly(True)
            self.lineEdit_docName1.setObjectName("lineEdit_docName1")
            self.lineEdit_docName1.setText(name)
            self.horizontalLayout_doc1.addWidget(self.lineEdit_docName1)
            self.lineEdit_docNotes1 = QtWidgets.QLineEdit(self.groupBox_doc1)
            self.lineEdit_docNotes1.setAutoFillBackground(False)
            self.lineEdit_docNotes1.setReadOnly(True)
            self.lineEdit_docNotes1.setObjectName("lineEdit_docNotes1")
            mtime = os.stat(config.TMP_DIR + "/scripts/" + name).st_mtime
            file_modify_time = time.strftime(
                '%Y-%m-%d %H:%M:%S', time.localtime(mtime))
            self.lineEdit_docNotes1.setText(file_modify_time)
            self.horizontalLayout_doc1.addWidget(self.lineEdit_docNotes1)
            spacerItem3 = QtWidgets.QSpacerItem(
                40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
            self.horizontalLayout_doc1.addItem(spacerItem3)
            self.horizontalLayout_docBotton1 = QtWidgets.QHBoxLayout()
            self.horizontalLayout_docBotton1.setObjectName(
                "horizontalLayout_docBotton1")
            self.pushButton_running1 = QtWidgets.QPushButton(self.groupBox_doc1)
            self.pushButton_running1.setMinimumSize(QtCore.QSize(40, 40))
            self.pushButton_running1.setMaximumSize(QtCore.QSize(40, 40))
            self.pushButton_running1.setAutoFillBackground(False)
            self.pushButton_running1.setStyleSheet("")
            self.pushButton_running1.setText("")
            icon4 = QtGui.QIcon()
            icon4.addPixmap(QtGui.QPixmap(self.Ui_DIR + "/icon/running.png"),
                            QtGui.QIcon.Normal, QtGui.QIcon.Off)
            self.pushButton_running1.setIcon(icon4)
            self.pushButton_running1.setIconSize(QtCore.QSize(30, 30))
            self.pushButton_running1.setObjectName("pushButton_running1")
            self.horizontalLayout_docBotton1.addWidget(self.pushButton_running1)
            self.pushButton_edit1 = QtWidgets.QPushButton(self.groupBox_doc1)
            self.pushButton_edit1.setMinimumSize(QtCore.QSize(40, 40))
            self.pushButton_edit1.setMaximumSize(QtCore.QSize(40, 40))
            self.pushButton_edit1.setText("")
            icon5 = QtGui.QIcon()
            icon5.addPixmap(QtGui.QPixmap(self.Ui_DIR + "/icon/edit.png"),
                            QtGui.QIcon.Normal, QtGui.QIcon.Off)
            self.pushButton_edit1.setIcon(icon5)
            self.pushButton_edit1.setObjectName("pushButton_edit1")
            self.horizontalLayout_docBotton1.addWidget(self.pushButton_edit1)
            self.pushButton_delete1 = QtWidgets.QPushButton(self.groupBox_doc1)
            self.pushButton_delete1.setText("")
            icon6 = QtGui.QIcon()
            icon6.addPixmap(QtGui.QPixmap(self.Ui_DIR + "/icon/delete2.png"),
                            QtGui.QIcon.Normal, QtGui.QIcon.Off)
            self.pushButton_delete1.setIcon(icon6)
            self.pushButton_delete1.setObjectName("pushButton_delete1")
            self.horizontalLayout_docBotton1.addWidget(self.pushButton_delete1)
            self.horizontalLayout_doc1.addLayout(self.horizontalLayout_docBotton1)
            self.horizontalLayout_doc1.setStretch(1, 2)
            self.horizontalLayout_doc1.setStretch(2, 2)
            self.horizontalLayout_doc1.setStretch(3, 4)
            self.horizontalLayout_doc1.setStretch(4, 2)

            self.pushButton_running1.clicked.connect(
                lambda: self.execute(self.sender().objectName()))
            self.pushButton_edit1.clicked.connect(
                lambda: self.src_edit(self.sender().objectName()))
            self.pushButton_delete1.clicked.connect(
                lambda: self.src_delete(self.sender().objectName()))

            self.pushButton_delete1.setObjectName(name)
            self.pushButton_edit1.setObjectName(name)
            self.pushButton_running1.setObjectName(name)

            self.horizontalLayout_16.addLayout(self.horizontalLayout_doc1)
            self.verticalLayout_2.addWidget(self.groupBox_doc1)
        
        spacerItem7 = QtWidgets.QSpacerItem(
            20, 0, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem7)
        self.scrollArea_document.setWidget(
            self.scrollAreaWidgetContents_document)
        self.verticalLayout_document.addWidget(self.scrollArea_document)

    
    def reload_editor(self, files = [], have_file = 0):
        self.scrollArea_document.setParent(None)
        self.verticalLayout_document.removeWidget(
                self.scrollArea_document)
        self.update_srcshow2(files, have_file)

    def whiteBackGround(self):
        self.editorHandler.set_theme_type('white')
        self.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.groupBox_head.setStyleSheet("QGroupBox#groupBox_head{\n"
                                         "    padding:0px 0px 0px 0px;\n"
                                         "    margin:0px 0px 0px 0px;\n"
                                         "    background-color: rgb(230, 230, 230);\n"
                                         "}\n"
                                         "\n"
                                         "QLabel#label_headLogo{\n"
                                         "margin:0px 0px 0px 0px;\n"
                                         "padding:0px 0px 0px 0px;\n"
                                         "}\n"
                                         "\n"
                                         "QPushButton#pushButton_headClose{\n"
                                         "    background:#CE0000;\n"
                                         "    color:white;\n"
                                         "    /*box-shadow: 1px 1px 3px rgba(0,0,0,0.3);*/\n"
                                         "    font-size:16px;\n"
                                         "    border-radius: 15px;\n"
                                         "    font-family: 微软雅黑;\n"
                                         "}\n"
                                         "QPushButton#pushButton_headClose:hover{                    \n"
                                         "    background:#FF2D2D;\n"
                                         "}\n"
                                         "QPushButton#pushButton_headClose:pressed{\n"
                                         "    border: 1px solid #3C3C3C!important;\n"
                                         "    background:#AE0000;\n"
                                         "}\n"
                                         "\n"
                                         "\n"
                                         "/*===============================================================*/\n"
                                         "QPushButton#pushButton_headMinimize{\n"
                                         "    background:#3C3C3C;\n"
                                         "    color:white;\n"
                                         "    /*box-shadow: 1px 1px 3px rgba(0,0,0,0.3);*/\n"
                                         "    font-size:16px;\n"
                                         "    border-radius: 15px;\n"
                                         "    font-family: 微软雅黑;\n"
                                         "}\n"
                                         "QPushButton#pushButton_headMinimize:hover{                    \n"
                                         "    background:#9D9D9D;\n"
                                         "}\n"
                                         "QPushButton#pushButton_headMinimize:pressed{\n"
                                         "    border: 1px solid #3C3C3C!important;\n"
                                         "}\n"
                                         "/*===============================================================*/\n"
                                         "QPushButton#pushButton_help{\n"
                                         "    background:#FFFFFF;\n"
                                         "    color:white;\n"
                                         "    /*box-shadow: 1px 1px 3px rgba(0,0,0,0.3);*/\n"
                                         "    font-size:16px;\n"
                                         "    border-radius: 15px;\n"
                                         "    font-family: 微软雅黑;\n"
                                         "}\n"
                                         "QPushButton#pushButton_help:hover{                    \n"
                                         "    background:#9D9D9D;\n"
                                         "}\n"
                                         "QPushButton#pushButton_help:pressed{\n"
                                         "    border: 1px solid #3C3C3C!important;\n"
                                         "}\n"
                                         "")
        self.tabWidget.setStyleSheet("\n"
                                     "QTabWidget::pane{\n"
                                     "border:none;\n"
                                     "    color: rgb(255, 255, 255);\n"
                                     "    background-color: rgb(30, 30, 30);\n"
                                     "}\n"
                                     "\n"
                                     "/*tabBar*/\n"
                                     "QTabBar::tab {\n"
                                     "/*元素外部*/\n"
                                     "margin:2px 0px 2px 0px;/*元素间距离，上右下左*/\n"
                                     "/*边框*/\n"
                                     "border:none;\n"
                                     "border-bottom-color: rgb(255, 215, 192); /* same as the pane color */\n"
                                     "border-top-left-radius: 10px;\n"
                                     "border-top-right-radius: 10px;\n"
                                     "border-bottom-left-radius: 10px;\n"
                                     "border-bottom-right-radius: 10px;\n"
                                     "/*元素大小*/\n"
                                     "width: 10ex;\n"
                                     "height: 30ex;\n"
                                     "padding: 10px;\n"
                                     "/*字体*/\n"
                                     "font-size: 14px;\n"
                                     "/*背景*/\n"
                                     "background-color:#FFFFFF;\n"
                                     "}\n"
                                     "\n"
                                     "QTabBar:tab:selected{\n"
                                     "background-color:rgb(230, 230, 230);/*选中背景色*/\n"
                                     "}\n"
                                     "\n"
                                     "QTabBar:tab:hover {\n"
                                     "background-color:rgb(243, 243, 243);/*选中背景色*/\n"
                                     "}\n"
                                     "QTabBar:tab:pressed {\n"
                                     "background-color:rgb(243, 243, 243);/*选中背景色*/\n"
                                     "}\n"
                                     "/*QTabWidget 头部属性设置*/\n"
                                     "QTabWidget::tab-bar {\n"
                                     "alignment: center;/*居中显示*/\n"
                                     "background-color:#FFFFFF;\n"
                                     "}\n"
                                     "\n"
                                     "/*===============================================*/\n"
                                     "/*文本框,Line*/\n"
                                     ".QTextBrowser{\n"
                                     "background:rgb(255, 255, 255);\n"
                                     "border-width:1;\n"
                                     "border-style:outset;\n"
                                     "height:20px;\n"
                                     "}\n"
                                     "\n"
                                     ".QLineEdit{\n"
                                     "background-color: transparent;\n"
                                     "}\n"
                                     "\n"
                                     "QLineEdit#lineEdit_searchLine{\n"
                                     "background-color: rgb(255, 255, 255);\n"
                                     "}\n"
                                     "\n"
                                     "QTextBrowser#debugWindowHandler{\n"
                                     "background-color: rgb(255, 255, 255);\n"
                                     "border:1px solid rgb(230, 230, 230);\n"
                                     "}\n"
                                     "\n"
                                     ".QSpinBox{\n"
                                     "background-color: rgb(255, 255, 255);\n"
                                     "}\n"
                                     "\n"
                                     ".Line{\n"
                                     "    margin:5px 0px 5px 0px;\n"
                                     "\n"
                                     "}\n"
                                     "/*================================================*/\n"
                                     "/*滚动条*/\n"
                                     "QScrollBar:vertical\n"
                                     "{\n"
                                     "    width:20px;\n"
                                     "    background:rgb(255, 255, 255);\n"
                                     "    margin:0px,0px,0px,0px;\n"
                                     "    padding-top:20px;   /* 留出9px给上面和下面的箭头*/\n"
                                     "    padding-bottom:20px;\n"
                                     "}\n"
                                     "QScrollBar::handle:vertical\n"
                                     "{\n"
                                     "    background:rgb(230, 230, 230); \n"
                                     "    border-radius:10px;   /* 滚动条两端变成椭圆*/\n"
                                     "\n"
                                     "}\n"
                                     "QScrollBar::handle:vertical:hover\n"
                                     "{\n"
                                     "    background:rgb(210, 210, 210); \n"
                                     "}\n"
                                     "QScrollBar::add-line:vertical{/*下箭头*/\n"
                                     "    border-radius:3px;\n"
                                     "\n"
                                     "    background:rgb(230, 230, 230); \n"
                                     "\n"
                                     "    height:20px;width:20px;\n"
                                     "    image: url(:/icon/combox_down1.png);\n"
                                     "    subcontrol-position:bottom;\n"
                                     "}\n"
                                     "QScrollBar::sub-line:vertical{/*上箭头*/\n"
                                     "    border-radius:3px;\n"
                                     "\n"
                                     "    background:rgb(230, 230, 230); \n"
                                     "\n"
                                     "    height:20px;width:20px;    \n"
                                     "    image: url(:/icon/combox_up1.png);\n"
                                     "    subcontrol-position:top;\n"
                                     "}\n"
                                     "QScrollBar::add-line:vertical:hover{\n"
                                     "    background:rgb(210, 210, 210); \n"
                                     "}\n"
                                     "QScrollBar::sub-line:vertical:hover{\n"
                                     "    background:rgb(210, 210, 210); \n"
                                     "}\n"
                                     "\n"
                                     "/* 当滚动条滚动的时候，上面的部分和下面的部分*/\n"
                                     "QScrollBar::add-page:vertical,QScrollBar::sub-page:vertical{\n"
                                     "    background:rgb(255, 255, 255);\n"
                                     "}\n"
                                     "\n"
                                     "/*=================================================*/\n"
                                     "/*Button*/\n"
                                     "QPushButton{\n"
                                     "qproperty-minimumSize: 0px 40px;\n"
                                     "qproperty-maximumSize: 16777215px 16777215px;\n"
                                     "qproperty-iconSize: 30px 30px;\n"
                                     "border-radius:3px;\n"
                                     "}\n"
                                     "\n"
                                     "QPushButton:hover{\n"
                                     "background-color:rgb(230, 230, 230);\n"
                                     "\n"
                                     "}\n"
                                     "\n"
                                     "QPushButton:pressed{\n"
                                     "background-color:rgb(230, 230, 230);\n"
                                     "border:2px solid rgb(31,156,220) ;\n"
                                     "}\n"
                                     "/*================================================*/\n"
                                     "/*文件tab page的scroll area 中*/\n"
                                     "QScrollArea QLineEdit{\n"
                                     "background:transparent;\n"
                                     "border-width:0;\n"
                                     "border-style:outset;\n"
                                     "height:20px;\n"
                                     "}\n"
                                     "\n"
                                     "QScrollArea#scrollArea_document QLabel{\n"
                                     "qproperty-minimumSize: 20px 20px;\n"
                                     "qproperty-maximumSize: 20px 20px;\n"
                                     "qproperty-scaledContents: true;\n"
                                     "}\n"
                                     "\n"
                                     "QScrollArea QPushButton{ \n"
                                     "qproperty-minimumSize: 40px 40px;\n"
                                     "qproperty-maximumSize: 40px 40px;\n"
                                     "qproperty-iconSize: 30px 30px;\n"
                                     "border-radius:20px;  \n"
                                     "}\n"
                                     "\n"
                                     "/*===============================================*/\n"
                                     "/*设置页中*/\n"
                                     "QPushButton#pushButton_setResetMouse,\n"
                                     "#pushButton_setResetRecording,#pushButton_setResetPicture{\n"
                                     "qproperty-minimumSize: 40px 40px;\n"
                                     "qproperty-maximumSize: 40px 40px;\n"
                                     "qproperty-iconSize: 40px 40px;\n"
                                     "border-radius:20px;  \n"
                                     "}\n"
                                     "\n"
                                     "QSpinBox{\n"
                                     "    border-top: 1px solid rgb(230, 230, 230);\n"
                                     "    border-left: 1px solid rgb(230, 230, 230);\n"
                                     "    border-bottom: 1px solid rgb(230, 230, 230);\n"
                                     "    border-right: 1px solid rgb(230, 230, 230);\n"
                                     "}\n"
                                     "\n"
                                     "/*================================================*/\n"
                                     "/*下拉列表comboBox*/\n"
                                     "QComboBox\n"
                                     "{\n"
                                     "    border-radius:3px;\n"
                                     "    background-color:rgb(255, 255, 255);\n"
                                     "    font: 75 9pt \"Microsoft YaHei\";\n"
                                     "    \n"
                                     "    color: rgb(0, 0, 0);\n"
                                     "/*\n"
                                     "    border-top: 2px solid rgb(255, 255, 255);\n"
                                     "    border-left: 2px solid rgb(255, 255, 255);\n"
                                     "    border-bottom: 2px solid rgb(85, 85, 85);\n"
                                     "    border-right: 2px solid rgb(85, 85, 85);    \n"
                                     "*/\n"
                                     "    border-top: 1px solid rgb(230, 230, 230);\n"
                                     "    border-left: 1px solid rgb(230, 230, 230);\n"
                                     "    border-bottom: 1px solid rgb(230, 230, 230);\n"
                                     "    border-right: 1px solid rgb(230, 230, 230);\n"
                                     "\n"
                                     "    padding-top: 2px;\n"
                                     "    padding-left: 2px;\n"
                                     "}\n"
                                     "QComboBox:disabled\n"
                                     "{\n"
                                     "    background-color:rgb(250, 250, 250);\n"
                                     "    font: 75 9pt \"Microsoft YaHei\";\n"
                                     "    color:rgb(160,160,160);\n"
                                     "}\n"
                                     "QComboBox:hover\n"
                                     "{\n"
                                     "    background-color:rgb(230, 230, 230);\n"
                                     "    \n"
                                     "}\n"
                                     "QComboBox:pressed\n"
                                     "{\n"
                                     "    background-color:rgb(230, 230, 230);\n"
                                     "    border:2px solid rgb(31,156,220) ;\n"
                                     "}\n"
                                     "/*点击combox的样式*/\n"
                                     "QComboBox:on\n"
                                     "{\n"
                                     "    border-radius:3px;\n"
                                     "    background-color:rgb(230, 230, 230);\n"
                                     "    font: 75 9pt \"Microsoft YaHei\";\n"
                                     "    \n"
                                     "    border:1px solid rgb(56, 166, 243) ;\n"
                                     "}\n"
                                     "/*下拉框的样式*/\n"
                                     "QComboBox QAbstractItemView \n"
                                     "{\n"
                                     "    outline: 0px solid gray;  /*取消选中虚线*/\n"
                                     "    border: 1px solid rgb(31,156,220);  \n"
                                     "    font: 75 9pt \"Microsoft YaHei\";\n"
                                     "    background-color: rgb(255, 255, 255); \n"
                                     "    selection-background-color: rgb(230, 230, 230);   \n"
                                     "}\n"
                                     " /*选中每一项高度*/\n"
                                     "QComboBox QAbstractItemView::item\n"
                                     " { \n"
                                     "    height: 25px;  \n"
                                     " }\n"
                                     "/*选中每一项的字体颜色和背景颜色*/\n"
                                     "QComboBox QAbstractItemView::item:selected \n"
                                     "{\n"
                                     "    \n"
                                     "    color: rgb(80, 80, 80);\n"
                                     "    /*\n"
                                     "    color: rgb(31,163,246);\n"
                                     "    background-color: rgb(90,90,90); \n"
                                     "    */\n"
                                     "}\n"
                                     " /*下拉箭头的边框*/\n"
                                     "QComboBox::drop-down \n"
                                     "{    \n"
                                     "    outline:0px;\n"
                                     "    border:none;\n"
                                     "}\n"
                                     "QComboBox::down-arrow \n"
                                     "{\n"
                                     "    right:10px;/*控制箭头左右偏移*/\n"
                                     "    width: 9px;  \n"
                                     "    height: 9px;   \n"
                                     "    image: url(%s/icon/combox_down2.png);\n" % self.Ui_DIR +
                                     "}\n"
                                     " /*下拉箭头点击样式*/\n"
                                     "QComboBox::down-arrow:on\n"
                                     "{\n"
                                     "    width: 9px;  \n"
                                     "    height: 9px;   \n"
                                     "    image: url(%s/icon/combox_down1.png);\n" % self.Ui_DIR +
                                     "}\n"
                                     "\n"
                                     "/*==================================================*/\n"
                                     "/*\n"
                                     "QPushButton{border-image: url(%s/icon/running.png)}\n" + self.Ui_DIR +
                                     "\n"
                                     "QPushButton:hover{border-image: url(%s/icon/running2.png)}\n" + self.Ui_DIR +
                                     "*/")


    def blackBackGround(self):
        self.editorHandler.set_theme_type('black')
        self.setStyleSheet("background-color: rgb(30, 30, 30);")
        self.groupBox_head.setStyleSheet("QGroupBox#groupBox_head{\n"
                                                "    border:none;\n"
                                                "    padding:0px 0px 0px 0px;\n"
                                                "    margin:0px 0px 0px 0px;\n"
                                                "    background-color: rgb(129, 129, 131);\n"
                                                "}\n"
                                                "\n"
                                                "QLabel#label_headLogo{\n"
                                                "margin:0px 0px 0px 0px;\n"
                                                "padding:0px 0px 0px 0px;\n"
                                                "}\n"
                                                "/*=============================================================*/\n"
                                                "\n"
                                                "QPushButton#pushButton_headClose{\n"
                                                "    background:#CE0000;\n"
                                                "    color:white;\n"
                                                "    /*box-shadow: 1px 1px 3px rgba(0,0,0,0.3);*/\n"
                                                "    font-size:16px;\n"
                                                "    border-radius: 15px;\n"
                                                "    font-family: 微软雅黑;\n"
                                                "}\n"
                                                "QPushButton#pushButton_headClose:hover{                    \n"
                                                "    background:#FF2D2D;\n"
                                                "}\n"
                                                "QPushButton#pushButton_headClose:pressed{\n"
                                                "    border: 1px solid #3C3C3C!important;\n"
                                                "    background:#AE0000;\n"
                                                "}\n"
                                                "\n"
                                                "\n"
                                                "/*===============================================================*/\n"
                                                "QPushButton#pushButton_headMinimize{\n"
                                                "    background:#6C6C6C;\n"
                                                "    color:white;\n"
                                                "    /*box-shadow: 1px 1px 3px rgba(0,0,0,0.3);*/\n"
                                                "    font-size:16px;\n"
                                                "    border-radius: 15px;\n"
                                                "    font-family: 微软雅黑;\n"
                                                "}\n"
                                                "QPushButton#pushButton_headMinimize:hover{                    \n"
                                                "    background:#9D9D9D;\n"
                                                "}\n"
                                                "QPushButton#pushButton_headMinimize:pressed{\n"
                                                "    border: 1px solid #3C3C3C!important;\n"
                                                "}\n"
                                                "/*===============================================================*/\n"
                                                "QPushButton#pushButton_help{\n"
                                                "    background:#DDDDDD;\n"
                                                "    color:white;\n"
                                                "    /*box-shadow: 1px 1px 3px rgba(0,0,0,0.3);*/\n"
                                                "    font-size:16px;\n"
                                                "    border-radius: 15px;\n"
                                                "    font-family: 微软雅黑;\n"
                                                "}\n"
                                                "QPushButton#pushButton_help:hover{                    \n"
                                                "    background:#FFFFFF;\n"
                                                "}\n"
                                                "QPushButton#pushButton_help:pressed{\n"
                                                "    border: 1px solid #3C3C3C!important;\n"
                                                "}\n"
                                                "")
        self.tabWidget.setStyleSheet("/*tabBar*/\n"
                                    "QTabWidget::pane{\n"
                                    "border:none;\n"
                                    "    color: rgb(255, 255, 255);\n"
                                    "    background-color: rgb(30, 30, 30);\n"
                                    "}\n"
                                    "\n"
                                    
                                    "QTabBar::tab {\n"
                                    "/*元素外部*/\n"
                                    "margin:0px 0px 0px 0px;/*元素间距离，上右下左*/\n"
                                    "/*边框*/\n"
                                    "border:none;\n"
                                    "border-bottom-color: rgb(255, 215, 192); /* same as the pane color */\n"
                                    "border-top-left-radius: 10px;\n"
                                    "border-top-right-radius: 10px;\n"
                                    "border-bottom-left-radius: 10px;\n"
                                    "border-bottom-right-radius: 10px;\n"
                                    "/*元素大小*/\n"
                                    "width: 10ex;\n"
                                    "height: 30ex;\n"
                                    "padding: 10px;\n"
                                    "\n"
                                    "/*字体*/\n"
                                    "font-size: 14px;\n"
                                    "color: rgb(255, 255, 255);\n"
                                    "/*背景*/\n"
                                    "background-color:rgb(45, 45, 48);\n"
                                    "}\n"
                                    "\n"
                                    "QTabBar:tab:selected{\n"
                                    "background-color:rgb(0, 122, 204);/*选中背景色*/\n"
                                    "}\n"
                                    "\n"
                                    "QTabBar:tab:hover {\n"
                                    "background-color:rgb(56, 166, 243);/*选中背景色*/\n"
                                    "}\n"
                                    "QTabBar:tab:pressed {\n"
                                    "background-color:rgb(0, 122, 204);/*选中背景色*/\n"
                                    "}\n"
                                    "/*QTabWidget 头部属性设置*/\n"
                                    "QTabWidget::tab-bar {\n"
                                    "alignment: center;/*居中显示*/\n"
                                    "background-color:rgb(30, 30, 30);\n"
                                    "}\n"
                                    "\n"
                                    "/*===============================================*/\n"
                                    "/*文本框、Label、Line*/\n"
                                    "QTextBrowser{\n"
                                    "color: rgb(255, 255, 255);\n"
                                    "background: rgb(51, 51, 55);\n"
                                    "border-style:outset;\n"
                                    "border:1px solid rgb(129, 129, 131);\n"
                                    "height:20px;\n"
                                    "}\n"
                                    "\n"
                                    "QLineEdit{\n"
                                    "    color: rgb(255, 255, 255);\n"
                                    "background-color:  rgb(51, 51, 55);\n"
                                    "border:1px solid rgb(129, 129, 131);\n"
                                    "}\n"
                                    "\n"
                                    "/*\n"
                                    "QLineEdit#lineEdit_searchLine{\n"
                                    "color: rgb(255, 255, 255);\n"
                                    "background-color: rgb(51, 51, 55);\n"
                                    "}\n"
                                    "\n"
                                    "*/\n"
                                    "\n"
                                    "QTextBrowser#debugWindowHandler{\n"
                                    "color: rgb(255, 255, 255);\n"
                                    "background-color:  rgb(51, 51, 55);\n"
                                    "border:1px solid rgb(129, 129, 131);\n"
                                    "}\n"
                                    "\n"
                                    "QSpinBox{\n"
                                    "    color: rgb(255, 255, 255);\n"
                                    "background-color: rgb rgb(51, 51, 55);\n"
                                    "border:1px solid rgb(129, 129, 131);\n"
                                    "}\n"
                                    "\n"
                                    "QLabel{\n"
                                    "    color: rgb(255, 255, 255);\n"
                                    "    background-color: rgb(30, 30, 30);\n"
                                    "}\n"
                                    "\n"
                                    ".Line{\n"
                                    "    margin:5px 0px 5px 0px;\n"
                                    "    background-color: rgb(129, 129, 131);\n"
                                    "}\n"
                                    "/*================================================*/\n"
                                    "/*滚动条*/\n"
                                    "QScrollBar:vertical\n"
                                    "{\n"
                                    "    width:20px;\n"
                                    "    background:rgb(45, 45, 48);\n"
                                    "    margin:0px,0px,0px,0px;\n"
                                    "    padding-top:20px;   /* 留出9px给上面和下面的箭头*/\n"
                                    "    padding-bottom:20px;\n"
                                    "}\n"
                                    "QScrollBar::handle:vertical\n"
                                    "{\n"
                                    "    background:rgba(80,80,80);\n"
                                    "    border-radius:10px;   /* 滚动条两端变成椭圆*/\n"
                                    "\n"
                                    "}\n"
                                    "QScrollBar::handle:vertical:hover\n"
                                    "{\n"
                                    "    background:rgba(100,100,100); \n"
                                    "}\n"
                                    "QScrollBar::add-line:vertical{/*下箭头*/\n"
                                    "    border-radius:3px;\n"
                                    "    background:rgba(80,80,80);\n"
                                    "    height:20px;width:20px;\n"
                                    "    image: url(:/icon/combox_down2.png);\n"
                                    "    subcontrol-position:bottom;\n"
                                    "}\n"
                                    "QScrollBar::sub-line:vertical{/*上箭头*/\n"
                                    "    border-radius:3px;\n"
                                    "    background:rgba(80,80,80);\n"
                                    "    height:20px;width:20px;    \n"
                                    "    image: url(:/icon/combox_up2.png);\n"
                                    "    subcontrol-position:top;\n"
                                    "}\n"
                                    "QScrollBar::add-line:vertical:hover{\n"
                                    "    background:rgba(100,100,100);\n"
                                    "}\n"
                                    "QScrollBar::sub-line:vertical:hover{\n"
                                    "    background:rgba(100,100,100);\n"
                                    "}\n"
                                    "\n"
                                    "/* 当滚动条滚动的时候，上面的部分和下面的部分*/\n"
                                    "QScrollBar::add-page:vertical,QScrollBar::sub-page:vertical{\n"
                                    "    background:rgb(45, 45, 48);\n"
                                    "}\n"
                                    "\n"
                                    "/*=================================================*/\n"
                                    "/*Button*/\n"
                                    "QPushButton{\n"
                                    "\n"
                                    "color: rgb(255, 255, 255);\n"
                                    "background-color: rgb(30, 30, 30);\n"
                                    "qproperty-minimumSize: 0px 40px;\n"
                                    "qproperty-maximumSize: 16777215px 16777215px;\n"
                                    "qproperty-iconSize: 30px 30px;\n"
                                    "border-radius:3px;\n"
                                    "}\n"
                                    "\n"
                                    "QPushButton:hover{\n"
                                    "background-color:rgb(80, 80, 80);\n"
                                    "\n"
                                    "}\n"
                                    "\n"
                                    "QPushButton:pressed{\n"
                                    "background-color:rgb(80, 80, 80);\n"
                                    "border:2px solid rgb(56, 166, 243) ;\n"
                                    "}\n"
                                    "\n"
                                    "/*==================================================*/\n"
                                    "/*Containers*/\n"
                                    "QGroupBox{\n"
                                    "border:1px solid rgb(129, 129, 131);\n"
                                    "}\n"
                                    "\n"
                                    "/*================================================*/\n"
                                    "/*文件页*/\n"
                                    "QScrollArea#scrollArea_document QLineEdit{\n"
                                    "background:rgb(30, 30, 30);\n"
                                    "    color: rgb(255, 255, 255);\n"
                                    "border-width:0;\n"
                                    "border-style:outset;\n"
                                    "height:20px;\n"
                                    "}\n"
                                    "\n"
                                    "QScrollArea#scrollArea_document QLabel{\n"
                                    "    background-color: rgb(30, 30, 30);\n"
                                    "qproperty-minimumSize: 20px 20px;\n"
                                    "qproperty-maximumSize: 20px 20px;\n"
                                    "qproperty-scaledContents: true;\n"
                                    "}\n"
                                    "\n"
                                    "QScrollArea#scrollArea_document QPushButton{ \n"
                                    "    background-color: rgb(45, 45, 48);\n"
                                    "qproperty-minimumSize: 40px 40px;\n"
                                    "qproperty-maximumSize: 40px 40px;\n"
                                    "qproperty-iconSize: 30px 30px;\n"
                                    "border-radius:20px;  \n"
                                    "}\n"
                                    "\n"
                                    "QScrollArea#scrollArea_document QPushButton:hover{\n"
                                    "background-color:rgb(80, 80, 80);\n"
                                    "\n"
                                    "}\n"
                                    "\n"
                                    "QScrollArea#scrollArea_document QPushButton:pressed{\n"
                                    "background-color:rgb(80, 80, 80);\n"
                                    "border:2px solid rgb(56, 166, 243) ;\n"
                                    "}\n"
                                    "\n"
                                    "QWidget#tabWidgetPage1_document QPushButton#pushButton_search{\n"
                                    "qproperty-minimumSize: 40px 40px;\n"
                                    "qproperty-maximumSize: 40px 40px;\n"
                                    "qproperty-iconSize: 30px 30px;\n"
                                    "}\n"
                                    "/*====================================================*/\n"
                                    "/*编辑页*/\n"
                                    "/*\n"
                                    "QWidget#tabWidgetPage2_edit QGroupBox#groupBox_editToolBox{\n"
                                    "    background-color: rgb(45, 45, 48);\n"
                                    "}\n"
                                    "\n"
                                    "QWidget#tabWidgetPage2_edit QGroupBox#groupBox_editToolBox QPushButton{\n"
                                    "    background-color: rgb(45, 45, 48);\n"
                                    "}\n"
                                    "*/\n"
                                    "\n"
                                    "/*===============================================*/\n"
                                    "/*设置页中*/\n"
                                    "QWidget#tabWidgetPage3_setting QPushButton{\n"
                                    "    background-color: rgb(30, 30, 30);\n"
                                    "    color: rgb(255, 255, 255);\n"
                                    "qproperty-minimumSize: 40px 40px;\n"
                                    "qproperty-maximumSize: 40px 40px;\n"
                                    "qproperty-iconSize: 40px 40px;\n"
                                    "border-radius:20px;  \n"
                                    "}\n"
                                    "\n"
                                    "QWidget#tabWidgetPage3_setting QPushButton:hover{\n"
                                    "    background-color: rgb(80, 80, 80);\n"
                                    "}\n"
                                    "\n"
                                    "QWidget#tabWidgetPage3_setting QPushButton:pressed{\n"
                                    "    background-color: rgb(80, 80, 80);\n"
                                    "border:2px solid rgb(56, 166, 243) ;\n"
                                    "}\n"
                                    "\n"
                                    "QSpinBox{\n"
                                    "    \n"
                                    "    background-color: rgb(51, 51, 55);\n"
                                    "    color: rgb(255, 255, 255);\n"
                                    "    /*\n"
                                    "    border-top: 1px solid rgb(230, 230, 230);\n"
                                    "    border-left: 1px solid rgb(230, 230, 230);\n"
                                    "    border-bottom: 1px solid rgb(230, 230, 230);\n"
                                    "    border-right: 1px solid rgb(230, 230, 230);\n"
                                    "    */\n"
                                    "    border:1px solid rgb(129, 129, 131);\n"
                                    "}\n"
                                    "\n"
                                    "/*================================================*/\n"
                                    "/*下拉列表comboBox*/\n"
                                    "QComboBox\n"
                                    "{\n"
                                    "    border-radius:3px;\n"
                                    "    border:1px solid rgb(129, 129, 131);\n"
                                    "    background-color: rgb(51, 51, 55);\n"
                                    "    font: 75 9pt \"Microsoft YaHei\";\n"
                                    "    \n"
                                    "    \n"
                                    "    color: rgb(255, 255, 255);\n"
                                    "/*\n"
                                    "    border-top: 2px solid rgb(255, 255, 255);\n"
                                    "    border-left: 2px solid rgb(255, 255, 255);\n"
                                    "    border-bottom: 2px solid rgb(85, 85, 85);\n"
                                    "    border-right: 2px solid rgb(85, 85, 85);    \n"
                                    "*/\n"
                                    "    padding-top: 2px;\n"
                                    "    padding-left: 2px;\n"
                                    "}\n"
                                    "QComboBox:disabled\n"
                                    "{\n"
                                    "    \n"
                                    "    background-color: rgb(51, 51, 55);\n"
                                    "    font: 75 9pt \"Microsoft YaHei\";\n"
                                    "    \n"
                                    "    color: rgb(255, 255, 255);\n"
                                    "}\n"
                                    "QComboBox:hover\n"
                                    "{\n"
                                    "    \n"
                                    "    background-color: rgb(80, 80, 80);\n"
                                    "    \n"
                                    "}\n"
                                    "QComboBox:pressed\n"
                                    "{\n"
                                    "    background-color: rgb(80, 80, 80);\n"
                                    "    border:2px solid rgb(56, 166, 243) ;\n"
                                    "}\n"
                                    "/*点击combox的样式*/\n"
                                    "QComboBox:on\n"
                                    "{\n"
                                    "    border-radius:3px;\n"
                                    "    background-color:rgb(80, 80, 80);\n"
                                    "    font: 75 9pt \"Microsoft YaHei\";\n"
                                    "    \n"
                                    "    border:1px solid rgb(56, 166, 243) ;\n"
                                    "}\n"
                                    "/*下拉框的样式*/\n"
                                    "QComboBox QAbstractItemView \n"
                                    "{\n"
                                    "    outline: 0px solid gray;  /*取消选中虚线*/\n"
                                    "    border: 1px solid rgb(56, 166, 243);  \n"
                                    "    font: 75 9pt \"Microsoft YaHei\";\n"
                                    "    background-color:rgb(51, 51, 55); \n"
                                    "    selection-background-color: rgb(80, 80, 80);   \n"
                                    "}\n"
                                    " /*选中每一项高度*/\n"
                                    "QComboBox QAbstractItemView::item\n"
                                    " { \n"
                                    "    height: 25px;  \n"
                                    " }\n"
                                    "/*选中每一项的字体颜色和背景颜色*/\n"
                                    "QComboBox QAbstractItemView::item:selected \n"
                                    "{\n"
                                    "    \n"
                                    "    color: rgb(255, 255, 255);\n"
                                    "    /*\n"
                                    "    color: rgb(31,163,246);\n"
                                    "    background-color: rgb(90,90,90); \n"
                                    "    */\n"
                                    "}\n"
                                    " /*下拉箭头的边框*/\n"
                                    "QComboBox::drop-down \n"
                                    "{    \n"
                                    "    outline:0px;\n"
                                    "    border:none;\n"
                                    "}\n"
                                    " /*下拉箭头样式*/\n"
                                    "QComboBox::down-arrow \n"
                                    "{\n"
                                    "    right: 10px;\n"
                                    "    width: 20px;  \n"
                                    "    height: 20px;      \n"
                                    "    image: url(:/icon/combox_down1.png);\n"
                                    "    \n"
                                    "}\n"
                                    " /*下拉箭头点击样式*/\n"
                                    "QComboBox::down-arrow:on\n"
                                    "{\n"
                                    "    width: 9px;  \n"
                                    "    height: 9px;      \n"
                                    "    image: url(:/icon/combox_down2.png);\n"
                                    "}\n"
                                    "\n"
                                    "/*==================================================*/\n"
                                    "/*\n"
                                    "QPushButton{border-image: url(icon/running.png)}\n"
                                    "\n"
                                    "QPushButton:hover{border-image: url(icon/running2.png)}\n"
                                    "*/")

    def comboBoxChange(self):
        if(self.comboBox_setStyle.currentIndex() == 0):
            self.whiteBackGround()
        elif(self.comboBox_setStyle.currentIndex() == 1):
            self.blackBackGround()
    
    def init_TMP_FILE_PATH(self):
        self.controllerHandler.newFile()

    def legal_numbers(self, s):
        try:
            int(s)
        except ValueError:
            return False
        else:
            return True

    def mouse_acc(self):
        content = self.spinBox_setMouseValue.value()
        if(self.legal_numbers(content)):
            config.MOUSE_ACCURACY = int(content)
            config.SUB_UI_HANDLER.set_sub_window_text("鼠标识别精度修改成功！")
            print("鼠标识别精度修改成功！")
        else:
            config.SUB_UI_HANDLER.set_sub_window_text("输入非法数字，请更改")
            print("输入非法数字，请更改")

    def image_acc(self):
        content = self.spinBox_setPictureValue.value()
        if(self.legal_numbers(content)):
            config.IMAGE_ACCURACY = int(content)
            config.SUB_UI_HANDLER.set_sub_window_text("图像识别精度修改成功！")
            print("图像识别精度 修改成功")
        else:
            config.SUB_UI_HANDLER.set_sub_window_text("输入非法数字，请更改")
            print("输入非法数字，请更改")

    def delay_acc(self):
        content = self.spinBox_setRecordingValue.value()
        if(self.legal_numbers(content)):
            config.DELAY_ACCURACY = int(content)
            config.SUB_UI_HANDLER.set_sub_window_text("录屏延迟精度修改成功！")
            print("延迟显示精度修改成功")
        else:
            config.SUB_UI_HANDLER.set_sub_window_text("输入非法数字，请更改")
            print("输入非法数字，请更改")

    def init_mouse_acc(self):
        config.MOUSE_ACCURACY = config.ORIGIN_MOUSE_ACCURACY
        self.spinBox_setMouseValue.setProperty(
            "value", config.MOUSE_ACCURACY)
        config.SUB_UI_HANDLER.set_sub_window_text("鼠标识别精度初始化成功！")

    def init_delay_acc(self):
        config.DELAY_ACCURACY = config.ORIGIN_DELAY_ACCURACY
        self.spinBox_setRecordingValue.setProperty(
            "value", config.DELAY_ACCURACY)
        config.SUB_UI_HANDLER.set_sub_window_text("录屏延迟精度初始化成功！")

    def init_image_acc(self):
        config.IMAGE_ACCURACY = config.ORIGIN_IMAGE_ACCURACY
        self.spinBox_setPictureValue.setProperty(
            "value", config.IMAGE_ACCURACY)
        config.SUB_UI_HANDLER.set_sub_window_text("图片识别精度初始化成功！")

    def newpage(self):
        self.init_TMP_FILE_PATH()
        with open(config.TMP_FILE_PATH, 'w', encoding='UTF-8') as f:
            f.write("")
            f.close()
        self.controllerHandler.open(config.TMP_FILE_PATH, call = False)
        self.debugWindowHandler.append("新建文件成功！") # ?
        self.reload_editor()

    def src_delete(self, name):
        self.controllerHandler.remove(config.TMP_DIR + "/scripts/" + name)
        self.reload_editor()

    def src_edit(self, name):
        self.tabWidget.setCurrentIndex(1)
        config.TMP_FILE_PATH = config.TMP_DIR + "/scripts/" + name
        self.controllerHandler.open(config.TMP_FILE_PATH)
        pass

    def search(self):
        keyWord = self.lineEdit_searchLine.text()
        need = self.controllerHandler.search(keyWord)
        self.reload_editor(need, 1)    
   

    def execute(self, name):
        self.controllerHandler.execute(config.TMP_DIR + "/scripts/" + name)


    def open(self):
        self.controllerHandler.opxen()


    def Minimize(self):
        self.controllerHandler.Minimize()


    def help(self):
        self.controllerHandler.help()
    

    def save(self, call):
        self.controllerHandler.save(call) # 转发消息


    def check(self):
        self.save(config.SAVE_AND_CHECK) # 真正的check是在实现check功能，因为异步，所以这么写


    def exe(self):
        self.save(config.SAVE_AND_EXE)  # 真正的exe是在实现exe功能，因为异步，所以这么写


    def image(self):
        self.controllerHandler.image()


    def voice(self):
        self.save(config.SAVE_DONT_TELL_ME) # 保存当前文件
        self.controllerHandler.voice() # 开始录音


    def monitor(self):
        self.controllerHandler.monitor()


    def showRuler(self):
        self.controllerHandler.showRuler()


    def saveAs(self):
        self.controllerHandler.saveAs()


    def modify(self):
        self.save(config.SAVE_DONT_TELL_ME)
        self.controllerHandler.modify()


    def clearDebugWindow(self):
        self.controllerHandler.cleardebugWindow()


    def closeWindow(self):
        self.controllerHandler.closeAndSave()
        self.close()

    def hello(self):
        print("Hello World")

def main():
    app = QtWidgets.QApplication(sys.argv)
    Main = Ui_MainWindow()
    Main.show()
    sys.exit(app.exec_())

if __name__ == "__main__":
    main()
